#include <iostream>
using namespace std ;

struct node {
    int data ;
    node *left ;
    node* right ;
    node (int var){
        data = var;
        left=right=nullptr ;
    }
};

void display (node*root )
{
    if (root== NULL ){
        return ;
    }
    else {
        cout <<" - "<<root->data;
        display(root-> left);
        display (root-> right );
    }
    
}

node* insert (node* root ,int data){
     if (root == NULL ){
        return new node(data) ;
    }
    if (data > root->data ){
         root->right = insert (root->right, data) ;
    }
    else {
         root->left = insert (root->left, data) ;
    }
    return root;
    
}

int find_min(node *root ){
    if (root == NULL ){
        return -1;
    }
    if (root->left == nullptr){
        return root->data;
    }
    return find_min(root->left);
}

int find_max(node *root ){
    if (root == NULL ){
        return -1;
    }
    if (root->right == nullptr){
        return root->data;
    }
    return find_max(root->right);
}
int height(node* root) {
    if (root == NULL) {
        return -1; 
    }
    int leftheight = height(root->left);
    int rightheight = height(root->right);

    return max(leftheight, rightheight) + 1;
}


int main() {
    node* root =new node (10);
    root ->left= new node (5);
    root ->right =new node(15);

    root =insert (root ,2);
    root =insert (root ,1);
    root = insert (root,17);
    root = insert (root,20);
    root = insert (root,7);
    
    display(root);
    cout <<endl;
    cout <<"small element :- "<<find_min(root)<<endl;
    cout <<"Big element :- "<<find_max(root)<<endl;
    cout <<"Height of the tree :- " << height(root) << endl;
    
    return 0;
}
